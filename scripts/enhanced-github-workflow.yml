# Enhanced GitHub Actions workflow for k8s-cluster-config repository
# Place this file in: k8s-cluster-config/.github/workflows/deployment-automation.yml

name: Deployment Automation

on:
  push:
    branches: [ main, staging ]
    paths:
      - 'apps/**/*.yaml'
      - 'apps/**/*.yml'
      - 'infrastructure/**/*.yaml'
      - 'infrastructure/**/*.yml'
      - 'monitoring/**/*.yaml'
      - 'monitoring/**/*.yml'
  pull_request:
    branches: [ main, staging ]
    paths:
      - 'apps/**/*.yaml'
      - 'apps/**/*.yml'
      - 'infrastructure/**/*.yaml'
      - 'infrastructure/**/*.yml'
      - 'monitoring/**/*.yaml'
      - 'monitoring/**/*.yml'
  workflow_dispatch:

env:
  DISCORD_WEBHOOK: ${{ secrets.DISCORD_HOMELAB_WEBHOOK }}
  UPTIME_KUMA_USERNAME: ${{ secrets.UPTIME_KUMA_USERNAME }}
  UPTIME_KUMA_PASSWORD: ${{ secrets.UPTIME_KUMA_PASSWORD }}

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      deployment-changes: ${{ steps.detect.outputs.deployment-changes }}
      service-changes: ${{ steps.detect.outputs.service-changes }}
      has-changes: ${{ steps.detect.outputs.has-changes }}
    steps:
    - name: Checkout k8s-cluster-config
      uses: actions/checkout@v4
      with:
        fetch-depth: 2

    - name: Detect deployment changes
      id: detect
      run: |
        # Get changed files
        if [ "${{ github.event_name }}" = "pull_request" ]; then
          CHANGED_FILES=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }})
        else
          CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD)
        fi
        
        echo "Changed files:"
        echo "$CHANGED_FILES"
        
        # Filter for deployment-related files
        DEPLOYMENT_CHANGES=$(echo "$CHANGED_FILES" | grep -E "(deployment|service|ingressroute|ingress)\.ya?ml$" || true)
        SERVICE_CHANGES=$(echo "$CHANGED_FILES" | grep -E "ingressroute\.ya?ml$" || true)
        
        echo "deployment-changes<<EOF" >> $GITHUB_OUTPUT
        echo "$DEPLOYMENT_CHANGES" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
        echo "service-changes<<EOF" >> $GITHUB_OUTPUT
        echo "$SERVICE_CHANGES" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
        if [ -n "$DEPLOYMENT_CHANGES" ]; then
          echo "has-changes=true" >> $GITHUB_OUTPUT
        else
          echo "has-changes=false" >> $GITHUB_OUTPUT
        fi

  validate-kubernetes:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.has-changes == 'true'
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Kubernetes tools
      run: |
        # Install kubeval
        curl -L https://github.com/instrumenta/kubeval/releases/latest/download/kubeval-linux-amd64.tar.gz | tar xz
        sudo mv kubeval /usr/local/bin
        
        # Install kubectl
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/

    - name: Validate YAML files
      run: |
        echo "Validating changed deployment files..."
        echo "${{ needs.detect-changes.outputs.deployment-changes }}" | while read file; do
          if [ -n "$file" ] && [ -f "$file" ]; then
            echo "Validating $file..."
            kubeval "$file" || echo "Warning: Validation failed for $file"
          fi
        done

  update-documentation:
    runs-on: ubuntu-latest
    needs: [detect-changes, validate-kubernetes]
    if: needs.detect-changes.outputs.service-changes != '' && github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
    - name: Checkout k8s-cluster-config
      uses: actions/checkout@v4
      with:
        path: k8s-cluster-config

    - name: Checkout homelab-docs
      uses: actions/checkout@v4
      with:
        repository: ${{ github.repository_owner }}/homelab-docs
        token: ${{ secrets.DOCS_REPO_TOKEN }}
        path: homelab-docs

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        pip install pyyaml requests

    - name: Run deployment automation
      env:
        DISCORD_HOMELAB_WEBHOOK: ${{ secrets.DISCORD_HOMELAB_WEBHOOK }}
        UPTIME_KUMA_USERNAME: ${{ secrets.UPTIME_KUMA_USERNAME }}
        UPTIME_KUMA_PASSWORD: ${{ secrets.UPTIME_KUMA_PASSWORD }}
      run: |
        cd homelab-docs
        
        # Check if automation script exists
        if [ -f "scripts/deployment-automation.py" ]; then
          echo "Running deployment automation..."
          python3 scripts/deployment-automation.py --action scan
        else
          echo "Automation script not found. Creating manual notification..."
          
          # Manual service detection for changed ingress routes
          cd ../k8s-cluster-config
          echo "${{ needs.detect-changes.outputs.service-changes }}" | while read file; do
            if [ -n "$file" ] && [ -f "$file" ]; then
              echo "Processing $file..."
              # Extract service information and create manual notification
              SERVICE_NAME=$(basename $(dirname "$file"))
              echo "Detected service change: $SERVICE_NAME in $file"
            fi
          done
        fi

    - name: Commit documentation changes
      run: |
        cd homelab-docs
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        if [ -n "$(git status --porcelain)" ]; then
          git add .
          git commit -m "docs: Automated update from k8s-cluster-config deployment changes"
          git push
          echo "Documentation updated and pushed"
        else
          echo "No documentation changes to commit"
        fi

  notify-discord:
    runs-on: ubuntu-latest
    needs: [detect-changes, validate-kubernetes]
    if: always() && needs.detect-changes.outputs.has-changes == 'true'
    steps:
    - name: Prepare notification
      id: prepare
      run: |
        if [ "${{ job.status }}" = "success" ] && [ "${{ needs.validate-kubernetes.result }}" = "success" ]; then
          STATUS="✅ Successful"
          COLOR="3066993"
        elif [ "${{ needs.validate-kubernetes.result }}" = "failure" ]; then
          STATUS="❌ Failed"
          COLOR="15158332"
        else
          STATUS="⚠️ Warning"
          COLOR="15105570"
        fi
        
        echo "status=$STATUS" >> $GITHUB_OUTPUT
        echo "color=$COLOR" >> $GITHUB_OUTPUT

    - name: Send Discord notification
      uses: Ilshidur/action-discord@master
      with:
        args: |
          🚀 **Deployment Changes Detected**
          
          **Repository:** ${{ github.repository }}
          **Branch:** ${{ github.ref_name }}
          **Status:** ${{ steps.prepare.outputs.status }}
          **Commit:** `${{ github.sha }}`
          **Author:** ${{ github.actor }}
          
          **Changed Files:**
          ```
          ${{ needs.detect-changes.outputs.deployment-changes }}
          ```
          
          **Event:** ${{ github.event_name }}
          **Timestamp:** $(date -u)
          
          🔗 [View Changes](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }})
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_HOMELAB_WEBHOOK }}

  security-scan:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.has-changes == 'true'
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'

    - name: Security notification
      if: always()
      uses: Ilshidur/action-discord@master
      with:
        args: |
          🔒 **Security Scan Complete**
          
          **Repository:** ${{ github.repository }}
          **Scan Status:** ${{ job.status }}
          **Files Scanned:** Deployment configuration files
          
          Check the Security tab for detailed results.
          
          🔗 [View Security Results](${{ github.server_url }}/${{ github.repository }}/security)
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_SECURITY_WEBHOOK }}
